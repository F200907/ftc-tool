(set-logic ALL)
(set-option :produce-unsat-cores true) ; enable generation of unsat cores
(declare-datatypes ((State 0)) (((mk-state (x Int)))))
(define-fun id ((s1 State) (s2 State)) Bool (and (= (x s1) (x s2))))
(define-fun sb_x ((s1 State) (s2 State) (val Int)) Bool (and (= (x s2) val)))

(declare-const state1 State)
(declare-const state2 State)
(declare-const state3 State)
(declare-const state4 State)
(assert true)
(assert 
    (not 
        (=> (id state1 state2) 
        (and
            (=> (not (or (< (x state1) 0) (= (x state1) 0)))
                (=> (sb_x state2 state3 (- (x state2) 2))
                    (=> (=> true (=> (= (x state4) 2) (= (x state4) 0)))
                        (=> (= (x state1) 2) (= (x state4) 0))
                    )
                )
            )
            (=> (or (< (x state1) 0) (= (x state1) 0))
                (=> (id state2 state3) 
                    (=> (= (x state1) 2) (= (x state3) 0))
                )
            )
        )
        )
    )
)
(check-sat)
(get-model)